[transforms.tf_fluentbit_winevtlog]
type = "remap"
inputs = ["sc_fluentbit_winevtlog"]
source = '''
if (.Message != null) {
  lines = split!(.Message, r'\r\n')
  .description = lines[0]

  properties = parse_regex_all!(.Message, r'(?m)^(?P<category>[^\r\n]+):\r\n(?P<properties>(?:\t[^\r\n]+\r\n)+)')
  for_each(properties) -> |_index, match| {
    prop_values = parse_regex_all!(match.properties, r'\t(?P<key>[^\t]+):\t+(?P<value>[^\r\n]+)')
    for_each(prop_values) -> |_index, prop| {
      joinedKey = replace!(prop.key, " ", "")
      category = replace!(match.category, " ", "")
      . = set!(., ["{{ category }}{{ joinedKey }}"], prop.value)
    }
  }
}
'''

[transforms.filter_fluentbit_evtlog]
type = "filter"
inputs = ["tf_fluentbit_winevtlog"]
condition = '''
id_scope = [4624]
includes(id_scope, .EventID)
'''

[transforms.route_fluentbit_evtlog]
type = "route"
inputs = ["filter_fluentbit_evtlog"]
reroute_unmatched = true
route.admin_to = '.EventID == 4624 && .LogonInformationElevatedToken == "Yes"'
route.has_session = '.EventID == 4624 && includes(["2", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13"], .LogonInformationLogonType)'



#
# [[tests]]
# name = "Testing parsing of Windows Event log 4624, logon type 5, via FluentBit"

# [[tests.inputs]]
# insert_at = "tf_fluentbit_winevtlog"
# type = "log"

# [tests.inputs.log_fields]
# ActivityID = ""
# Channel = "Security"
# Computer = "kingslanding.sevenkingdoms.local"
# EventID = 4624
# EventRecordID = 80455
# Keywords = "0x8020000000000000"
# Level = 0
# Message = "An account was successfully logged on.\r\n\r\nSubject:\r\n\tSecurity ID:\t\tS-1-5-18\r\n\tAccount Name:\t\tKINGSLANDING$\r\n\tAccount Domain:\t\tSEVENKINGDOMS\r\n\tLogon ID:\t\t0x3E7\r\n\r\nLogon Information:\r\n\tLogon Type:\t\t5\r\n\tRestricted Admin Mode:\t-\r\n\tVirtual Account:\t\tNo\r\n\tElevated Token:\t\tYes\r\n\r\nImpersonation Level:\t\tImpersonation\r\n\r\nNew Logon:\r\n\tSecurity ID:\t\tS-1-5-18\r\n\tAccount Name:\t\tSYSTEM\r\n\tAccount Domain:\t\tNT AUTHORITY\r\n\tLogon ID:\t\t0x3E7\r\n\tLinked Logon ID:\t\t0x0\r\n\tNetwork Account Name:\t-\r\n\tNetwork Account Domain:\t-\r\n\tLogon GUID:\t\t{00000000-0000-0000-0000-000000000000}\r\n\r\nProcess Information:\r\n\tProcess ID:\t\t0x234\r\n\tProcess Name:\t\tC:\\Windows\\System32\\services.exe\r\n\r\nNetwork Information:\r\n\tWorkstation Name:\t-\r\n\tSource Network Address:\t-\r\n\tSource Port:\t\t-\r\n\r\nDetailed Authentication Information:\r\n\tLogon Process:\t\tAdvapi  \r\n\tAuthentication Package:\tNegotiate\r\n\tTransited Services:\t-\r\n\tPackage Name (NTLM only):\t-\r\n\tKey Length:\t\t0\r\n\r\nThis event is generated when a logon session is created. It is generated on the computer that was accessed.\r\n\r\nThe subject fields indicate the account on the local system which requested the logon. This is most commonly a service such as the Server service, or a local process such as Winlogon.exe or Services.exe.\r\n\r\nThe logon type field indicates the kind of logon that occurred. The most common types are 2 (interactive) and 3 (network).\r\n\r\nThe New Logon fields indicate the account for whom the new logon was created, i.e. the account that was logged on.\r\n\r\nThe network fields indicate where a remote logon request originated. Workstation name is not always available and may be left blank in some cases.\r\n\r\nThe impersonation level field indicates the extent to which a process in the logon session can impersonate.\r\n\r\nThe authentication information fields provide detailed information about this specific logon request.\r\n\t- Logon GUID is a unique identifier that can be used to correlate this event with a KDC event.\r\n\t- Transited services indicate which intermediate services have participated in this logon request.\r\n\t- Package name indicates which sub-protocol was used among the NTLM protocols.\r\n\t- Key length indicates the length of the generated session key. This will be 0 if no session key was requested."
# Opcode = 0
# ProcessID = 592
# ProviderGuid = "{54849625-5478-4994-A5BA-3E3B0328C30D}"
# ProviderName = "Microsoft-Windows-Security-Auditing"
# Qualifiers = ""
# RelatedActivityID = ""
# StringInserts = "['S-1-5-21-1267327980-1800640824-2189074639-1001', 'WINTERFELL$', 'NORTH', '0x7f7f1c8', 3]"
# Task = 12545
# ThreadID = 7044
# TimeCreated = "2025-09-14 18:05:08 -0400"
# UserID = ""
# Version = "0"
# host = "10.3.10.10"
# source_type = "fluent"
# tag = "winevtlog.0"
# timestamp = "2025-09-14T22:05:10.044136700Z"

# [[tests.outputs]]
# extract_from = "filter_fluentbit_evtlog"

# [[tests.outputs.conditions]]
# type = "vrl"
# source = '''
# assert!(is_string(.description))
# assert!(.description == "An account was successfully logged on.", "Description not parsed from Message field content")
# assert!(.SubjectSecurityID == "S-1-5-18", "Subject Security ID not parsed from Message field content")
# assert!(.SubjectAccountName == "KINGSLANDING$", "Subject Account Name not parsed from Message field content")
# assert!(.SubjectAccountDomain == "SEVENKINGDOMS", "Subject Acount Domain not parsed from Message field content")
# assert!(.LogonInformationLogonType == "5", "Subject Acount Domain not parsed from Message field content")
# '''

# [[tests.outputs]]
# extract_from = "graph_fluentbit_evtlog_edges_admin_to"

# [[tests.outputs.conditions]]
# type = "vrl"
# source = '''
# assert!(.edge.start.value == "KINGSLANDING$@SEVENKINGDOMS", "Transform failed, start edge incorrect")
# assert!(.edge.end.value == "SYSTEM@NT AUTHORITY", "Transform failed, end edge incorrect")
# '''



[[tests]]
name = "HasSession scenario 1: logon with credential exposure"

[[tests.inputs]]
insert_at = "tf_fluentbit_winevtlog"
type = "log"

[tests.inputs.log_fields]
ActivityID = ""
Channel = "Security"
Computer = "winterfell.north.sevenkingdoms.local"
EventID = 4624
EventRecordID = 80455
Keywords = "0x8020000000000000"
Level = 0
Message = "An account was successfully logged on.\r\n\r\nSubject:\r\n\tSecurity ID:\t\tS-1-5-18\r\n\tAccount Name:\t\tWINTERFELL$\r\n\tAccount Domain:\t\tNORTH\r\n\tLogon ID:\t\t0x3E7\r\n\r\nLogon Information:\r\n\tLogon Type:\t\t4\r\n\tRestricted Admin Mode:\t-\r\n\tVirtual Account:\t\tNo\r\n\tElevated Token:\t\tYes\r\n\r\nImpersonation Level:\t\tImpersonation\r\n\r\nNew Logon:\r\n\tSecurity ID:\t\tS-1-5-21-1267327980-1800640824-2189074639-1113\r\n\tAccount Name:\t\trobb.stark\r\n\tAccount Domain:\t\tNORTH\r\n\tLogon ID:\t\t0x407344F\r\n\tLinked Logon ID:\t\t0x0\r\n\tNetwork Account Name:\t-\r\n\tNetwork Account Domain:\t-\r\n\tLogon GUID:\t\t{dbaedc0a-a9db-1db7-99d6-dc854574ffb7}\r\n\r\nProcess Information:\r\n\tProcess ID:\t\t0x714\r\n\tProcess Name:\t\tC:\\Windows\\System32\\svchost.exe\r\n\r\nNetwork Information:\r\n\tWorkstation Name:\tWINTERFELL\r\n\tSource Network Address:\t-\r\n\tSource Port:\t\t-\r\n\r\nDetailed Authentication Information:\r\n\tLogon Process:\t\tAdvapi  \r\n\tAuthentication Package:\tNegotiate\r\n\tTransited Services:\t-\r\n\tPackage Name (NTLM only):\t-\r\n\tKey Length:\t\t0\r\n\r\nThis event is generated when a logon session is created. It is generated on the computer that was accessed.\r\n\r\nThe subject fields indicate the account on the local system which requested the logon. This is most commonly a service such as the Server service, or a local process such as Winlogon.exe or Services.exe.\r\n\r\nThe logon type field indicates the kind of logon that occurred. The most common types are 2 (interactive) and 3 (network).\r\n\r\nThe New Logon fields indicate the account for whom the new logon was created, i.e. the account that was logged on.\r\n\r\nThe network fields indicate where a remote logon request originated. Workstation name is not always available and may be left blank in some cases.\r\n\r\nThe impersonation level field indicates the extent to which a process in the logon session can impersonate.\r\n\r\nThe authentication information fields provide detailed information about this specific logon request.\r\n\t- Logon GUID is a unique identifier that can be used to correlate this event with a KDC event.\r\n\t- Transited services indicate which intermediate services have participated in this logon request.\r\n\t- Package name indicates which sub-protocol was used among the NTLM protocols.\r\n\t- Key length indicates the length of the generated session key. This will be 0 if no session key was requested."
Opcode = 0
ProcessID = 600
ProviderGuid = "{54849625-5478-4994-A5BA-3E3B0328C30D}"
ProviderName = "Microsoft-Windows-Security-Auditing"
Qualifiers = ""
RelatedActivityID = ""
StringInserts = "['S-1-5-21-1267327980-1800640824-2189074639-1001', 'WINTERFELL$', 'NORTH', '0x7f7f1c8', 3]"
Task = 12545
ThreadID = 7044
TimeCreated = "2025-09-14 18:05:08 -0400"
UserID = ""
Version = "0"
host = "10.3.10.10"
source_type = "fluent"
tag = "winevtlog.0"
timestamp = "2025-09-14T22:05:10.044136700Z"

[[tests.outputs]]
extract_from = "filter_fluentbit_evtlog"

[[tests.outputs.conditions]]
type = "vrl"
source = '''
assert!(is_string(.description))
assert!(.description == "An account was successfully logged on.", "Description not parsed from Message field content")
assert!(.SubjectSecurityID == "S-1-5-18", "Subject Security ID not parsed from Message field content")
assert!(.SubjectAccountName == "WINTERFELL$", "Subject Account Name not parsed from Message field content")
assert!(.SubjectAccountDomain == "NORTH", "Subject Acount Domain not parsed from Message field content")
assert!(.LogonInformationLogonType == "4", "Subject Acount Domain not parsed from Message field content")
'''

[[tests.outputs]]
extract_from = "graph_fluentbit_evtlog_edges_has_session"

[[tests.outputs.conditions]]
type = "vrl"
source = '''
assert!(.edge.start.value == "winterfell.north.sevenkingdoms.local", "Transform failed, start edge incorrect")
assert!(.edge.end.value == "S-1-5-21-1267327980-1800640824-2189074639-1113", "Transform failed, end edge incorrect")
'''
